
name: main

on: [push]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Run tests
        run: ./gradlew clean test

      - name: Build artifact
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: icecream
          IMAGE_TAG: latest
        run: |-
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: build/libs

  EC2-Deploy:
    runs-on: ubuntu-latest
    steps:
      - id: deploy
        uses: bitovi/github-actions-deploy-docker-to-ec2@v0.5.0
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_default_region: us-east-1
          dot_env: ${{ secrets.DOT_ENV }}
#
#
#      - name: deploy docker image to ec2
##        env:
##          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
##          ECR_REPOSITORY: icecream
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: icecream
#          IMAGE_TAG: latest
#          AWS_REGION: ap-south-1
#          AWS_DEFAULT_REGION: ap-south-1
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ env.PUBLIC_SERVER_IP }}
#          username: ubuntu
#          key: ${{ env.PRIVATE_SSH_KEY }}
#          envs: PRIVATE_SSH_KEY,ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
#          script: |-
#            sudo apt update
#            sudo apt install docker.io -y
#            sudo apt install awscli -y
#            sudo $(aws ecr get-login --no-include-email --region ap-south-1);
#            sudo docker stop myappcontainer || true
#            sudo docker rm myappcontainer || true
#            sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#            sudo docker run -d --name myappcontainer -p 80:8080 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
##      - name: Deploy docker image to EC2
##          run: |
##            docker pull 130878056308.dkr.ecr.us-west-2.amazonaws.com/icecream:latest
#






#      - name: Deploy docker image to EC2
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: icecream
#          IMAGE_TAG: latest
#          AWS_Default_region: ap-south-1
#        uses: https://github.com/vanshi03/BiblioTeca
#        with:
#          host:
#
#          username:
#          key:
#          envs:
#          script: |-
            


#      - name: Start AWS EC2
#
#        run: |
#            aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
#        env:
#            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}


